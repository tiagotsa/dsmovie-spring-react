name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Build Backend JAR
        working-directory: backend
        run: |
          chmod +x mvnw
          ./mvnw clean package -DskipTests
      
      - name: Setup Docker
        run: |
          docker version
          docker info
      
      - name: Build Images
        run: |
          # Build backend
          cd backend
          cp src/Dockerfile .
          docker build -t tsmovie-backend .
          
          # Build frontend
          cd ../frontend
          docker build -t tsmovie-frontend .
      
      - name: Configure VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Garantir que o Git está instalado
            which git || (apt-get update && apt-get install -y git)
            
            # Configurar diretório do projeto
            mkdir -p /opt/tsmovie
            cd /opt/tsmovie
            
            # Configurar Git se necessário
            if [ ! -d .git ]; then
              git init
              git config --global --add safe.directory /opt/tsmovie
              git remote add origin https://github.com/tiagotsa/dsmovie-spring-react.git
            fi
            
            # Atualizar código
            git fetch origin main
            git reset --hard origin/main
            
            # Garantir que o Docker Compose está instalado
            which docker-compose || (apt-get update && apt-get install -y docker-compose)
            
            # Parar containers existentes
            docker-compose -f docker-compose.prod.yml down || true
            
            # Iniciar aplicação
            docker-compose -f docker-compose.prod.yml up -d --build