name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Make mvnw executable
        working-directory: backend
        run: chmod +x mvnw

      - name: Build Backend
        working-directory: backend
        run: |
          ./mvnw -B package --file pom.xml -DskipTests
          docker build -t tsmovie-backend .

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Build Frontend
        env:
          CI: false  # Prevents treating warnings as errors
          REACT_APP_BACKEND_URL: http://145.223.29.209:8080
        run: |
          cd frontend
          yarn install --frozen-lockfile
          yarn build
          docker build -t tsmovie-frontend .

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /opt/tsmovie
            
            # Pull latest code
            git pull origin main
            
            # Stop and remove existing containers
            docker-compose -f docker-compose.prod.yml down
            
            # Remove old containers and volumes if needed
            docker-compose -f docker-compose.prod.yml rm -f
            
            # Build and start new containers
            docker-compose -f docker-compose.prod.yml up -d --build
            
            # Clean up unused images
            docker image prune -f
