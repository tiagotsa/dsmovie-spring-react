name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact@v4 # Checkout do código

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Distribuição Java LTS recomendada
          cache: maven  # Cache do Maven para builds mais rápidos

      - name: Permissão para o Maven Wrapper
        run: chmod +x backend/mvnw # Corrige a permissão do mvnw

      - name: Build Backend
        run: |
          cd backend
          ./mvnw -B package --file pom.xml -DskipTests

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'  # Cache do Yarn para instalação mais rápida

      - name: Build Frontend
        run: |
          cd frontend
          yarn install
          yarn build
          
      - name: Zip Frontend
        run: |
           cd frontend
           zip -r dist.zip dist
           
      - name: Upload Frontend dist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: frontend/dist.zip

      - name: Deploy to VPS (com chave SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }} # Chave SSH privada (recomendado)
          port: 22
          script: |
            cd /opt/tsmovie  # Diretório mais apropriado para projetos
            git pull origin main  # Faz o pull das últimas alterações (especifica a branch)
            docker-compose -f docker-compose.prod.yml up --build -d