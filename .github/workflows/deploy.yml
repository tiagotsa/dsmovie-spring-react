name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set Maven Wrapper Permission
        run: |
          git update-index --chmod=+x backend/mvnw
          chmod +x backend/mvnw

      - name: Build Backend
        run: |
          cd backend
          ./mvnw -B package --file pom.xml -DskipTests

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install and Build Frontend
        env:
          CI: false  # Prevents treating warnings as errors
        run: |
          cd frontend
          yarn install --frozen-lockfile
          yarn build

      - name: Zip Frontend
        run: |
          cd frontend
          zip -r dist.zip dist

      - name: Upload Frontend dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: frontend/dist.zip

      - name: Deploy to VPS (com chave SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /opt/tsmovie
            git pull origin main
            # Stop any running containers
            docker-compose -f docker-compose.prod.yml down
            # Remove old images to ensure we get the latest version
            docker-compose -f docker-compose.prod.yml rm -f
            # Pull latest images
            docker-compose -f docker-compose.prod.yml pull
            # Start the application
            docker-compose -f docker-compose.prod.yml up -d --build
            # Clean up unused images
            docker image prune -f