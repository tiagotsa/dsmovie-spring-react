name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Setup VPS Dependencies
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            echo " Instalando e configurando dependências..."
            
            # Instalar Git
            if ! command -v git &> /dev/null; then
              echo " Instalando Git..."
              sudo apt-get update
              sudo apt-get install -y git
            fi
            
            # Configurar Git
            echo " Configurando Git..."
            git config --global --add safe.directory /opt/tsmovie
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            
            # Instalar Docker
            if ! command -v docker &> /dev/null; then
              echo " Instalando Docker..."
              curl -fsSL https://get.docker.com | sudo sh
              sudo usermod -aG docker $USER
              sudo systemctl enable docker
              sudo systemctl start docker
            fi
            
            # Instalar Docker Compose
            if ! command -v docker-compose &> /dev/null; then
              echo " Instalando Docker Compose..."
              sudo apt-get update
              sudo apt-get install -y docker-compose
            fi
            
            echo " Configuração concluída!"

      - name: Deploy Application
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            echo " Iniciando deploy..."
            
            # Preparar diretório
            sudo mkdir -p /opt/tsmovie
            sudo chown -R $USER:$USER /opt/tsmovie
            cd /opt/tsmovie
            
            # Clonar/atualizar repositório
            if [ ! -d .git ]; then
              echo " Clonando repositório..."
              git init
              git remote add origin https://github.com/tiagotsa/dsmovie-spring-react.git
            fi
            
            echo " Atualizando código..."
            git fetch origin main
            git reset --hard origin/main
            
            echo " Reiniciando containers..."
            docker-compose -f docker-compose.prod.yml down || true
            docker system prune -af --volumes || true
            
            echo " Construindo e iniciando serviços..."
            docker-compose -f docker-compose.prod.yml up -d --build --force-recreate
            
            echo " Status dos serviços:"
            docker-compose -f docker-compose.prod.yml ps