name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Build Frontend
        working-directory: frontend
        run: |
          yarn install
          yarn build

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build Backend
        working-directory: backend
        run: |
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          cat >>~/.ssh/config <<END
          Host hostinger
            HostName ${{ secrets.VPS_HOST }}
            User ${{ secrets.VPS_USERNAME }}
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          END

      - name: Deploy to Hostinger
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            frontend/build/
            backend/target/*.jar
          target: "/home/${{ secrets.VPS_USERNAME }}/dsmovie"
          strip_components: 1

      - name: Restart Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "ðŸš€ Reiniciando aplicaÃ§Ã£o..."
            cd ~/dsmovie
            pkill -f 'java -jar' || true
            nohup java -jar -Dspring.profiles.active=prod backend/target/*.jar > app.log 2>&1 &
            echo "âœ… Backend reiniciado"
            
            # Configure e reinicie o Nginx para servir o frontend
            sudo tee /etc/nginx/conf.d/dsmovie.conf > /dev/null <<EOF
            server {
                listen 80;
                server_name _;
                root /home/${{ secrets.VPS_USERNAME }}/dsmovie/frontend/build;
                index index.html;
                
                location / {
                    try_files \$uri \$uri/ /index.html;
                    add_header Cache-Control "no-store, no-cache, must-revalidate";
                }
                
                location /api {
                    proxy_pass http://localhost:8080;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                }
            }
            EOF
            
            sudo nginx -t && sudo systemctl restart nginx
            echo "âœ… Frontend configurado e Nginx reiniciado"