name: Deploy to VPS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} 'echo "SSH Connection Test Successful"'

      - name: Deploy to VPS
        if: success()
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/dsmovie-spring-react
            git fetch origin main
            git reset --hard origin/main
            
            # Create .env file
            cat > .env << 'ENVFILE'
            POSTGRES_DB=tsmovie
            POSTGRES_USER=postgres
            POSTGRES_PASSWORD=1234
            SPRING_PROFILES_ACTIVE=prod
            REACT_APP_BACKEND_URL=http://${{ secrets.VPS_HOST }}:8080
            ENVFILE
            
            # Deploy with Docker
            docker-compose -f docker-compose.prod.yml down
            docker system prune -af --volumes
            docker-compose -f docker-compose.prod.yml build --no-cache
            docker-compose -f docker-compose.prod.yml up -d
            
            # Verify deployment
            docker ps
            docker logs dsmovie-spring-react-frontend-1
          EOF