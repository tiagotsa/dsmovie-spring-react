name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # --- Backend ---
      - name: Set mvnw executable permission (after checkout) - Backend
        working-directory: backend
        run: |
          chmod +x mvnw
          ls -l mvnw  # Debug: Check permissions

      - name: Build Backend Docker Image
        working-directory: backend
        run: |
          bash ./mvnw -B package --file pom.xml -DskipTests
          docker build -t tsmovie-backend .

      # --- Frontend ---
      - name: Set permissions for frontend scripts (if any)
        working-directory: frontend
        run: |
          # Replace 'your_script.sh' with any actual script files you have
          # If you don't have any scripts to execute, this section can be removed
          if [ -f your_script.sh ]; then
            chmod +x your_script.sh
            ls -l your_script.sh # Debug: Check permissions
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Build Frontend
        env:
          CI: false
          REACT_APP_BACKEND_URL: http://145.223.29.209:8080
        run: |
          cd frontend
          yarn install --frozen-lockfile
          yarn build
          docker build -t tsmovie-frontend .

      # --- Deploy to VPS ---
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /opt/tsmovie

            # Pull latest code
            git pull origin main

            # Stop and remove existing containers
            docker-compose -f docker-compose.prod.yml down

            # Remove old containers and volumes if needed
            docker-compose -f docker-compose.prod.yml rm -f

            # Build and start new containers
            docker-compose -f docker-compose.prod.yml up -d --build

            # Clean up unused images
            docker image prune -f